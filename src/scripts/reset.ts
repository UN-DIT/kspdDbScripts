import { configDotenv } from 'dotenv';
import { Db } from "mongodb";
import dbInit from "../dbInit";


configDotenv();

const { APP_VERSION } = process.env;
const SCRIPT_NAME = "ü¶ñ RESET"
const COLLECTION_NAME = "files";

async function resetIsEmptyField(db: Db) {
    try {
        const collection = db.collection(COLLECTION_NAME);

        console.log(`üåæ Reset isEmpty field`);
        const result = await collection.updateMany({}, { $set: { isEmpty: false } });
        console.log(`‚úÖ Updated ${result.modifiedCount} documents.`);
    } catch (error) {
        console.error("‚ùå Error updating isEmpty field:", error);
    }
}

async function resetSubjectsField(db: Db) {
    try {
        const collection = db.collection(COLLECTION_NAME);

        console.log(`üåæ Reset subjects field`);
        const result = await collection.updateMany({}, { $set: { subjects: [] } });
        console.log(`‚úÖ Updated ${result.modifiedCount} documents.`);
    } catch (error) {
        console.error("‚ùå Error updating subjects field:", error);
    }
}

const main = async () => {
    console.log(`${SCRIPT_NAME} v.${APP_VERSION}`)

    const startTime = Date.now(); // –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —á–∞—Å
    const [connect, disconnect] = await dbInit()

    try {
        const db = await connect();

        if (!db) {
            return
        }

        await resetIsEmptyField(db);
        await resetSubjectsField(db);
    } catch (error) {
        console.error("‚ùå Error:", error);
    } finally {
        await disconnect()
        console.log("üîå Disconnected from MongoDB");
    }

    const endTime = Date.now(); // –ß–∞—Å –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó
    const durationMs = endTime - startTime; // –ó–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å —É –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö

    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≥–æ–¥–∏–Ω, —Ö–≤–∏–ª–∏–Ω, —Å–µ–∫—É–Ω–¥
    const hours = Math.floor(durationMs / 3600000);
    const minutes = Math.floor((durationMs % 3600000) / 60000);
    const seconds = Math.floor((durationMs % 60000) / 1000);

    console.log(`‚è≥ Execution time: ${hours}h ${minutes}m ${seconds}s`);
}

// Run the script
main()